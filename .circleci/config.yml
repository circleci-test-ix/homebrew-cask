version: 2.1

jobs:
  build:
    macos:
      xcode: "10.0"
    steps:
      - checkout
      - restore_cache:
          key: dependency-bundle
      - restore_cache:
          key: dependency-portable-ruby
      - run:
          name: force strict error checking
          command: |
            # Force strict error checking.
            set -o errexit
            set -o pipefail
      - run:
          name: Update Travis commit range.
          command: |
            COMMIT_RANGE=$(echo "${CIRCLE_COMPARE_URL}" | cut -d/ -f7)
            # Fix single commit, unfortunately we don't always get a commit range from Circle CI
            if [[ $COMMIT_RANGE != *"..."* ]]; then
              COMMIT_RANGE="${COMMIT_RANGE}...${COMMIT_RANGE}"
            fi
            echo $COMMIT_RANGE
            BRANCH_COMMIT="${COMMIT_RANGE##*.}"
            TARGET_COMMIT="${COMMIT_RANGE%%.*}"
            echo ${BRANCH_COMMIT}
            echo ${TARGET_COMMIT}
            if ! MERGE_BASE="$(git merge-base "${BRANCH_COMMIT}" "${TARGET_COMMIT}" 2>/dev/null)"; then              
              echo about to fetch shallow
              git fetch --unshallow
              MERGE_BASE="$(git merge-base "${BRANCH_COMMIT}" "${TARGET_COMMIT}")"
            fi
            # export TRAVIS_COMMIT_RANGE="${MERGE_BASE}...${BRANCH_COMMIT}"
            echo 'export TRAVIS_COMMIT_RANGE="${MERGE_BASE}...${BRANCH_COMMIT}"' >> $BASH_ENV
            # Update Travis commit range.
            # This is not normally required but does prevent problems with outdated forks and
            # deleted casks (see https://github.com/Homebrew/homebrew-cask/pull/43164).
            # BRANCH_COMMIT="${TRAVIS_COMMIT_RANGE##*.}"
            # TARGET_COMMIT="${TRAVIS_COMMIT_RANGE%%.*}"
            # if ! MERGE_BASE="$(git merge-base "${BRANCH_COMMIT}" "${TARGET_COMMIT}" 2>/dev/null)"; then
            # git fetch --unshallow
            # MERGE_BASE="$(git merge-base "${BRANCH_COMMIT}" "${TARGET_COMMIT}")"
            # fi
            # export TRAVIS_COMMIT_RANGE="${MERGE_BASE}...${BRANCH_COMMIT}"
      - run:
          name: Switch to master branch.
          command: |
            # Switch to master branch.
            echo 'export HOMEBREW_COLOR=1' >> $BASH_ENV
            echo 'export HOMEBREW_DEVELOPER=1' >> $BASH_ENV
            echo 'export HOMEBREW_NO_AUTO_UPDATE=1' >> $BASH_ENV
            brew update-reset
      - run:
          name: "Fix CIRCLE_WORKING_DIRECTORY"
          command: echo 'CIRCLE_WORKING_DIRECTORY="${CIRCLE_WORKING_DIRECTORY/#\~/$HOME}"' >> $BASH_ENV
      - run:
          name: Mirror the repo as a tap.
          command: |
            # Mirror the repo as a tap.
            TAP_DIR="$(brew --repository)/Library/Taps/${CIRCLE_PROJECT_USERNAME}/${CIRCLE_PROJECT_REPONAME}"
            mkdir -p ${TAP_DIR}
            rsync -az --delete "${CIRCLE_WORKING_DIRECTORY}/" "${TAP_DIR}/"
            echo 'export CIRCLE_WORKING_DIRECTORY="${TAP_DIR}"' >> $BASH_ENV
            # export CIRCLE_WORKING_DIRECTORY="${TAP_DIR}"
            builtin cd "${CIRCLE_WORKING_DIRECTORY}"
            # brew cask ci
      - run:
          name: Brew cask CI
          command: |
            TAP_DIR="$(brew --repository)/Library/Taps/${CIRCLE_PROJECT_USERNAME}/${CIRCLE_PROJECT_REPONAME}"
            builtin cd ${TAP_DIR}
            pwd
            ls
            brew cask ci
      - save_cache:
          key: dependency-bundle
          paths:
            - /usr/local/Homebrew/Library/Homebrew/vendor/bundle
      - save_cache:
          key: dependency-portable-ruby
          paths:
            - /usr/local/Homebrew/Library/Homebrew/vendor/portable-ruby
